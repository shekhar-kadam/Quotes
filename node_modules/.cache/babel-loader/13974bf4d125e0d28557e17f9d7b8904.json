{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tec\\\\Desktop\\\\prac__route\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quotesA, quotesB) => {\n    if (ascending) {\n      return quotesA.id > quotesB.id ? 1 : -1;\n    } else {\n      return quotesA.id < quotesB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.author\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["C:/Users/Tec/Desktop/prac__route/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quotesA","quotesB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","list","map","quote","author"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAGA,MAAMC,UAAU,GAAG,CAAEC,MAAF,EAAUC,SAAV,KAAyB;AACxC,SAAOD,MAAM,CAACE,IAAP,CAAa,CAAEC,OAAF,EAAWC,OAAX,KAAwB;AACxC,QAAKH,SAAL,EAAiB;AACb,aAAOE,OAAO,CAACE,EAAR,GAAaD,OAAO,CAACC,EAArB,GAA0B,CAA1B,GAA8B,CAAC,CAAtC;AACH,KAFD,MAEO;AACH,aAAOF,OAAO,CAACE,EAAR,GAAaD,OAAO,CAACC,EAArB,GAA0B,CAA1B,GAA8B,CAAC,CAAtC;AACH;AACJ,GANM,CAAP;AAOH,CARD;;AAUA,MAAMC,SAAS,GAAKC,KAAF,IAAa;AAAA;;AAE3B,QAAMC,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,WAAW,GAAG,IAAIC,eAAJ,CAAqBF,QAAQ,CAACG,MAA9B,CAApB;AAEA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAI,MAAA,SAAS,EAAEd,OAAO,CAACe,IAAvB;AAAA,gBACKN,KAAK,CAACP,MAAN,CAAac,GAAb,CAAmBC,KAAD,iBACf,QAAC,SAAD;AAA2B,QAAA,EAAE,EAAEA,KAAK,CAACV,EAArC;AAAyC,QAAA,MAAM,EAAEU,KAAK,CAACC,MAAvD;AAA+D,QAAA,IAAI,EAAED,KAAK,CAACC;AAA3E,SAAiBD,KAAK,CAACV,EAAvB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAhBD;;GAAMC,S;UAEcX,U,EACCC,W;;;KAHfU,S;AAkBN,eAAeA,SAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport QuoteItem from \"./QuoteItem\";\r\nimport classes from \"./QuoteList.module.css\";\r\n\r\n\r\nconst sortQuotes = ( quotes, ascending ) => {\r\n    return quotes.sort( ( quotesA, quotesB ) => {\r\n        if ( ascending ) {\r\n            return quotesA.id > quotesB.id ? 1 : -1;\r\n        } else {\r\n            return quotesA.id < quotesB.id ? 1 : -1;\r\n        }\r\n    })\r\n}\r\n\r\nconst QuoteList = ( props ) => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const queryParams = new URLSearchParams( location.search );\r\n\r\n    return (\r\n        <Fragment>\r\n            <ul className={classes.list}>\r\n                {props.quotes.map( (quote) => (\r\n                    <QuoteItem  key={quote.id} id={quote.id} author={quote.author} text={quote.author} />\r\n                ))}\r\n            </ul>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default QuoteList;"]},"metadata":{},"sourceType":"module"}