{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tec\\\\Desktop\\\\prac__route\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from \"./CommentsList\";\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"JE0IhtIFhIG5ZKXSN2T5eDZ5OJ4=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Tec/Desktop/prac__route/src/components/comments/Comments.js"],"names":["useCallback","useEffect","useState","useParams","useHttp","getAllComments","LoadingSpinner","CommentsList","classes","NewCommentForm","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addCommentHandler","comments","length"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAA0CV,QAAQ,CAAE,KAAF,CAAxD;AAEA,QAAMW,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAcD,MAApB;AAEA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC;AAA7B,MAAgDd,OAAO,CAAEC,cAAF,CAA7D;AAEAJ,EAAAA,SAAS,CAAE,MAAM;AACfc,IAAAA,WAAW,CAAED,OAAF,CAAX;AACD,GAFQ,EAEN,CAAEA,OAAF,EAAWC,WAAX,CAFM,CAAT;;AAMA,QAAMI,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAMQ,iBAAiB,GAAGpB,WAAW,CAAE,MAAM;AAC3Ce,IAAAA,WAAW,CAAED,OAAF,CAAX;AACD,GAFoC,EAElC,CAAEC,WAAF,EAAeD,OAAf,CAFkC,CAArC;AAIA,MAAIO,QAAJ;;AAEA,MAAKL,MAAM,KAAK,SAAhB,EAA4B;AAC1BK,IAAAA,QAAQ,gBACN;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAKL,MAAM,KAAK,WAAX,IAA0BE,cAA1B,IAA4CA,cAAc,CAACI,MAAf,GAAwB,CAAzE,EAA6E;AAC3ED,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,MACEF,MAAM,KAAK,WAAX,KACC,CAACE,cAAD,IAAmBA,cAAc,CAACI,MAAf,KAA0B,CAD9C,CADF,EAGE;AACAD,IAAAA,QAAQ,gBAAG;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEb,OAAO,CAACa,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBAAI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAxDD;;GAAMD,Q;UAGWP,S,EAIuCC,O;;;KAPlDM,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from \"./CommentsList\";\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [ isAddingComment, setIsAddingComment ] = useState( false );\n  \n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp( getAllComments );\n  \n  useEffect( () => {\n    sendRequest( quoteId );\n  }, [ quoteId, sendRequest ] );\n\n\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback( () => {\n    sendRequest( quoteId );\n  }, [ sendRequest, quoteId ] );\n\n  let comments;\n\n  if ( status === 'pending' ) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if ( status === 'completed' && loadedComments && loadedComments.length > 0 ) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}