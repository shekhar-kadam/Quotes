{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tec\\\\Desktop\\\\prac__route\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useRef, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./QuoteForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  };\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"prompt\", {\n      when: isEntering,\n      message: () => 'Are you Sure You Want to leave? All Your Entered Data will be lost..'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.from,\n        onSubmit: submitFormHandler,\n        onFocus: formFocusHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \" Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \" Add a Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteForm, \"Zf9B+4RgRq31ADCOsmURGegSJ84=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["C:/Users/Tec/Desktop/prac__route/src/components/quotes/QuoteForm.js"],"names":["Fragment","useRef","useState","Card","classes","LoadingSpinner","QuoteForm","props","isEntering","setIsEntering","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","formFocusHandler","from","isLoading","loading","control","actions"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAEA,MAAMC,SAAS,GAAKC,KAAF,IAAa;AAAA;;AAE3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMQ,cAAc,GAAGT,MAAM,EAA7B;AACA,QAAMU,YAAY,GAAGV,MAAM,EAA3B;;AAEA,QAAMW,iBAAiB,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C;AACA,UAAMC,WAAW,GAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC;AAEAV,IAAAA,KAAK,CAACY,UAAN,CAAkB;AAAEC,MAAAA,MAAM,EAAEL,aAAV;AAAyBM,MAAAA,IAAI,EAAEH;AAA/B,KAAlB;AACH,GAPD;;AASA,QAAMI,gBAAgB,GAAG,MAAM;AAC3Bb,IAAAA,aAAa,CAAE,IAAF,CAAb;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAED,UAAd;AAA0B,MAAA,OAAO,EAAE,MAAM;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA,QAAC,IAAD;AAAA,6BACI;AAAM,QAAA,SAAS,EAAEJ,OAAO,CAACmB,IAAzB;AAA+B,QAAA,QAAQ,EAAEX,iBAAzC;AAA4D,QAAA,OAAO,EAAEU,gBAArE;AAAA,mBACKf,KAAK,CAACiB,SAAN,iBACG;AAAK,UAAA,SAAS,EAAEpB,OAAO,CAACqB,OAAxB;AAAA,iCACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFR,eAOI;AAAK,UAAA,SAAS,EAAErB,OAAO,CAACsB,OAAxB;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,QAAtB;AAA+B,YAAA,GAAG,EAAEhB;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAWI;AAAK,UAAA,SAAS,EAAEN,OAAO,CAACsB,OAAxB;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,EAAE,EAAC,MAAb;AAAoB,YAAA,IAAI,EAAC,GAAzB;AAA6B,YAAA,GAAG,EAAEf;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAeI;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACuB,OAAxB;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA9CD;;GAAMrB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import { Fragment, useRef, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./QuoteForm.module.css\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nconst QuoteForm = ( props ) => {\r\n    \r\n    const [isEntering, setIsEntering] = useState(false)\r\n\r\n    const authorInputRef = useRef();\r\n    const textInputRef = useRef();\r\n\r\n    const submitFormHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredAuthor = authorInputRef.current.value;\r\n        const enteredText = textInputRef.current.value;\r\n\r\n        props.onAddQuote( { author: enteredAuthor, text: enteredText } );\r\n    }\r\n\r\n    const formFocusHandler = () => {\r\n        setIsEntering( true );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <prompt when={isEntering} message={() => 'Are you Sure You Want to leave? All Your Entered Data will be lost..'} />\r\n        <Card>\r\n            <form className={classes.from} onSubmit={submitFormHandler} onFocus={formFocusHandler}>\r\n                {props.isLoading && (\r\n                    <div className={classes.loading}>\r\n                        <LoadingSpinner />\r\n                    </div>\r\n                )}\r\n                \r\n                <div className={classes.control}>\r\n                    <label htmlFor=\"author\"> Author</label>\r\n                    <input type=\"text\" id=\"author\" ref={authorInputRef }/>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='text'>Text</label>\r\n                    <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button className=\"btn\"> Add a Quote</button>\r\n                </div>\r\n            </form>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default QuoteForm;\r\n"]},"metadata":{},"sourceType":"module"}