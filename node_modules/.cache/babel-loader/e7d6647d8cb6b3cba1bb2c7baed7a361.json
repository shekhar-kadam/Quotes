{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tec\\\\Desktop\\\\prac__route\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport classes from './NewCommentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n  const {\n    onAddedComment\n  } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = event => {\n    event.preventDefault(); // optional: Could validate here\n\n    sendRequest({\n      commentData: {\n        text: enterdText\n      },\n      quoteId: props.quoteId\n    }); // send comment to server\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"Y8R0MHs/XMPV/v7mhEjkbp1RDZA=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["C:/Users/Tec/Desktop/prac__route/src/components/comments/NewCommentForm.js"],"names":["useEffect","useRef","useHttp","addComment","classes","NewCommentForm","props","commentTextRef","sendRequest","status","error","onAddedComment","submitFormHandler","event","preventDefault","commentData","text","enterdText","quoteId","form","control","actions"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,cAAc,GAAGN,MAAM,EAA7B;AAEA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAiCR,OAAO,CAAEC,UAAF,CAA9C;AAEE,QAAM;AAAEQ,IAAAA;AAAF,MAAqBL,KAA3B;AAEAN,EAAAA,SAAS,CAAE,MAAM;AACf,QAAKS,MAAM,KAAK,WAAX,IAA0B,CAACC,KAAhC,EAAwC;AACtCC,MAAAA,cAAc;AACf;AACF,GAJQ,EAIP,CAACF,MAAD,EAASC,KAAT,EAAgBC,cAAhB,CAJO,CAAT;;AAMF,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;;AACJN,IAAAA,WAAW,CAAC;AAACO,MAAAA,WAAW,EAAE;AAACC,QAAAA,IAAI,EAAEC;AAAP,OAAd;AAAkCC,MAAAA,OAAO,EAAEZ,KAAK,CAACY;AAAjD,KAAD,CAAX,CAJuC,CAKnC;AACD,GAND;;AAQA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACe,IAAzB;AAA+B,IAAA,QAAQ,EAAEP,iBAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,OAAO,CAACgB,OAAxB;AAAiC,MAAA,QAAQ,EAAER,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAEL;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACiB,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhCD;;GAAMhB,c;UAGmCH,O;;;KAHnCG,c;AAkCN,eAAeA,cAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp( addComment );\n\n    const { onAddedComment } = props;\n\n    useEffect( () => {\n      if ( status === 'completed' && !error ) {\n        onAddedComment();\n      }\n    },[status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\nsendRequest({commentData: {text: enterdText}, quoteId: props.quoteId})\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"]},"metadata":{},"sourceType":"module"}