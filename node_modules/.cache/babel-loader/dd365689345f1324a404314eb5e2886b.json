{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tec\\\\Desktop\\\\prac__route\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuotes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  console.log(\"match\", match);\n  const params = useParams();\n  let quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  console.log(quote);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Find..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/Tec/Desktop/prac__route/src/pages/QuoteDetail.js"],"names":["Fragment","Link","Route","useParams","useRouteMatch","Comments","HighlightedQuote","QuoteDetail","match","console","log","params","quote","DUMMY_QUOTES","find","id","quoteId","text","author","path","url"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAGJ,aAAa,EAA3B;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAa,OAAb,EAAsBF,KAAtB;AACA,QAAMG,MAAM,GAAGR,SAAS,EAAxB;AAEA,MAAIS,KAAK,GAAGC,YAAY,CAACC,IAAb,CAAqBF,KAAF,IAAaA,KAAK,CAACG,EAAN,KAAaJ,MAAM,CAACK,OAApD,CAAZ;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAaE,KAAb;;AAEA,MAAK,CAACA,KAAN,EAAc;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACK,IAA9B;AAAoC,MAAA,MAAM,EAAEL,KAAK,CAACM;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEV,KAAK,CAACW,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAGX,KAAK,CAACY,GAAK,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAWT,MAAM,CAACK,OAAS,WAAzC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA/BD;;GAAMT,W;UACYH,a,EAGCD,S;;;KAJbI,W;AAiCN,eAAeA,WAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuotes\"\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n\r\n    console.log( \"match\", match );\r\n    const params = useParams();\r\n\r\n    let quote = DUMMY_QUOTES.find( ( quote ) => quote.id === params.quoteId );\r\n\r\n    console.log( quote );\r\n\r\n    if ( !quote ) {\r\n        return <p>No Quote Find..</p>\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={quote.text} author={quote.author} />\r\n            \r\n            <Route path={match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`${ match.url }/comments`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n\r\n            <Route path={`/quotes/${ params.quoteId }/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}