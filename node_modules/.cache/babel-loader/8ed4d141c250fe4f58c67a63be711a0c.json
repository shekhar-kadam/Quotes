{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useReducer } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending'\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed'\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed'\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  _s();\n\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null\n  });\n  const sendRequest = useCallback(async function (requestData) {\n    dispatch({\n      type: 'SEND'\n    });\n\n    try {\n      const responseData = await requestFunction(requestData);\n      dispatch({\n        type: 'SUCCESS',\n        responseData\n      });\n    } catch (error) {\n      dispatch({\n        type: 'ERROR',\n        errorMessage: error.message || 'Something Went Wrong!'\n      });\n    }\n  }, [requestFunction]);\n  return {\n    sendRequest,\n    ...httpState\n  };\n}\n\n_s(useHttp, \"onTVwsWI5p/oZ2ZaVoOWADcZqZ4=\");\n\nexport default useHttp;","map":{"version":3,"sources":["C:/Users/Tec/Desktop/prac__route/src/hooks/use-http.js"],"names":["useCallback","useReducer","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","httpState","dispatch","sendRequest","requestData","message"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAsC;AAClC,MAAKA,MAAM,CAACC,IAAP,KAAgB,MAArB,EAA8B;AAC1B,WAAO;AACHC,MAAAA,IAAI,EAAE,IADH;AAEHC,MAAAA,KAAK,EAAE,IAFJ;AAGHC,MAAAA,MAAM,EAAE;AAHL,KAAP;AAKH;;AAED,MAAKJ,MAAM,CAACC,IAAP,KAAgB,SAArB,EAAiC;AAC7B,WAAO;AACHC,MAAAA,IAAI,EAAEF,MAAM,CAACK,YADV;AAEHF,MAAAA,KAAK,EAAE,IAFJ;AAGHC,MAAAA,MAAM,EAAE;AAHL,KAAP;AAKH;;AAED,MAAKJ,MAAM,CAACC,IAAP,KAAgB,OAArB,EAA+B;AAC3B,WAAO;AACHC,MAAAA,IAAI,EAAE,IADH;AAEHC,MAAAA,KAAK,EAAEH,MAAM,CAACM,YAFX;AAGHF,MAAAA,MAAM,EAAE;AAHL,KAAP;AAKH;;AAED,SAAOL,KAAP;AACH;;AAED,SAASQ,OAAT,CAAkBC,eAAlB,EAAmCC,gBAAgB,GAAG,KAAtD,EAA8D;AAAA;;AAC1D,QAAM,CAAEC,SAAF,EAAaC,QAAb,IAA0Bd,UAAU,CAAEC,WAAF,EAAe;AACrDM,IAAAA,MAAM,EAAEK,gBAAgB,GAAG,SAAH,GAAe,IADc;AAErDP,IAAAA,IAAI,EAAE,IAF+C;AAGrDC,IAAAA,KAAK,EAAE;AAH8C,GAAf,CAA1C;AAMA,QAAMS,WAAW,GAAGhB,WAAW,CAC3B,gBAAiBiB,WAAjB,EAA+B;AAC3BF,IAAAA,QAAQ,CAAE;AAAEV,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAR;;AAEA,QAAI;AACA,YAAMI,YAAY,GAAG,MAAMG,eAAe,CAAEK,WAAF,CAA1C;AACAF,MAAAA,QAAQ,CAAE;AAAEV,QAAAA,IAAI,EAAE,SAAR;AAAmBI,QAAAA;AAAnB,OAAF,CAAR;AACH,KAHD,CAGE,OAAQF,KAAR,EAAgB;AAEdQ,MAAAA,QAAQ,CAAE;AACNV,QAAAA,IAAI,EAAE,OADA;AAENK,QAAAA,YAAY,EAAEH,KAAK,CAACW,OAAN,IAAiB;AAFzB,OAAF,CAAR;AAIH;AACJ,GAd0B,EAe3B,CAAEN,eAAF,CAf2B,CAA/B;AAkBA,SAAO;AACHI,IAAAA,WADG;AAEH,OAAGF;AAFA,GAAP;AAIH;;GA7BQH,O;;AA+BT,eAAeA,OAAf","sourcesContent":["import { useCallback, useReducer } from \"react\";\r\n\r\nfunction httpReducer( state, action ) {\r\n    if ( action.type === 'SEND' ) {\r\n        return {\r\n            data: null,\r\n            error: null,\r\n            status: 'pending'\r\n        };\r\n    }\r\n\r\n    if ( action.type === 'SUCCESS' ) {\r\n        return {\r\n            data: action.responseData,\r\n            error: null,\r\n            status: 'completed'\r\n        }\r\n    }\r\n\r\n    if ( action.type === 'ERROR' ) {\r\n        return {\r\n            data: null,\r\n            error: action.errorMessage,\r\n            status: 'completed'\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nfunction useHttp( requestFunction, startWithPending = false ) {\r\n    const [ httpState, dispatch ] = useReducer( httpReducer, {\r\n        status: startWithPending ? 'pending' : null,\r\n        data: null,\r\n        error: null,\r\n    } );\r\n\r\n    const sendRequest = useCallback(\r\n        async function ( requestData ) {\r\n            dispatch( { type: 'SEND' } );\r\n            \r\n            try {\r\n                const responseData = await requestFunction( requestData );\r\n                dispatch( { type: 'SUCCESS', responseData } );\r\n            } catch ( error ) {\r\n\r\n                dispatch( {\r\n                    type: 'ERROR',\r\n                    errorMessage: error.message || 'Something Went Wrong!',\r\n                } );\r\n            }\r\n        },\r\n        [ requestFunction ]\r\n    );\r\n\r\n    return {\r\n        sendRequest,\r\n        ...httpState\r\n    }\r\n}\r\n\r\nexport default useHttp;"]},"metadata":{},"sourceType":"module"}