{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuotes.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","components/quotes/NoQuotesFound.js","components/UI/LoadingSpinner.js","pages/AllQuote.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/quotes/HighlightedQuotes.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","to","activeClassName","active","src","alt","nav","Layout","props","main","children","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quotesA","quotesB","sorting","onClick","push","pathname","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuote","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","getAllComments","transformedComments","commentObj","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","NoQuoteFound","noquotes","LoadingSpinner","spinner","AllQuotes","loadedQuotes","useEffect","length","NoQuotesFound","Card","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NotFound","HighlightedQuotes","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","QuoteDetail","match","useRouteMatch","path","exact","url","App","AllQuote","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.703b5b87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2z9IA\",\"logo\":\"MainNavigation_logo__YuRcm\",\"nav\":\"MainNavigation_nav__1oRXD\",\"active\":\"MainNavigation_active__3AZVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2A03s\",\"loading\":\"QuoteForm_loading__1EHRz\",\"control\":\"QuoteForm_control__1dRpV\",\"actions\":\"QuoteForm_actions__1cNH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__10en1\",\"loading\":\"NewCommentForm_loading__1L-vx\",\"control\":\"NewCommentForm_control__2cI0N\",\"actions\":\"NewCommentForm_actions__qfwAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3h9nX\",\"sorting\":\"QuoteList_sorting__3ex47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2cWaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1UwGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3qwOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__qTSbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2nGcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuotes_quote__2y9Ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2LytX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3Z5Fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2bMIS\"};","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>\r\n                <NavLink to=\"/\" activeClassName={classes.active}>\r\n                    <img src=\"https://www.imgawards.com/wp-content/uploads/2015/06/imga_logos_3_red.png\" alt=\"logo\" />\r\n                </NavLink>\r\n                </div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n                            All Quotes\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink to=\"new-quote\" activeClassName={classes.active}>\r\n                            Add a Quote\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default MainNavigation;","import { Fragment } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={classes.main}>{ props.children}</main>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Layout;","import { Link } from 'react-router-dom';\r\nimport classes from './QuoteItem.module.css';\r\n\r\nconst QuoteItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <figure>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <figcaption>{props.author}</figcaption>\r\n      </figure>\r\n      <Link className='btn' to={`/quotes/${props.id}`}>\r\n        View Fullscreen\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default QuoteItem;\r\n","import { Fragment } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport QuoteItem from \"./QuoteItem\";\r\nimport classes from \"./QuoteList.module.css\";\r\n\r\n\r\nconst sortQuotes = ( quotes, ascending ) => {\r\n    return quotes.sort( ( quotesA, quotesB ) => {\r\n        if ( ascending ) {\r\n            return quotesA.id > quotesB.id ? 1 : -1;\r\n        } else {\r\n            return quotesA.id < quotesB.id ? 1 : -1;\r\n        }\r\n    })\r\n}\r\n\r\nconst QuoteList = ( props ) => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const queryParams = new URLSearchParams( location.search );\r\n\r\n    const isSortingAscending = queryParams.get( 'sort' ) === \"asc\";\r\n\r\n    const sortedQuotes = sortQuotes( props.quotes, isSortingAscending );\r\n\r\n    const changeSortingHandler = () => {\r\n        history.push( {    \r\n      pathname: location.pathname,\r\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\r\n        } );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n            <div className={classes.sorting}>\r\n                <button onClick={changeSortingHandler}>\r\n                    Sort {isSortingAscending ? 'Descending' : 'Ascending'}\r\n                </button>\r\n            </div>\r\n            <ul className={classes.list}>\r\n                {sortedQuotes.map( (quote) => (\r\n                    <QuoteItem  key={quote.id} id={quote.id} author={quote.author} text={quote.text} />\r\n                ))}\r\n            </ul>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default QuoteList;","import { useCallback, useReducer } from \"react\";\r\n\r\nfunction httpReducer( state, action ) {\r\n    if ( action.type === 'SEND' ) {\r\n        return {\r\n            data: null,\r\n            error: null,\r\n            status: 'pending'\r\n        };\r\n    }\r\n\r\n    if ( action.type === 'SUCCESS' ) {\r\n        return {\r\n            data: action.responseData,\r\n            error: null,\r\n            status: 'completed'\r\n        }\r\n    }\r\n\r\n    if ( action.type === 'ERROR' ) {\r\n        return {\r\n            data: null,\r\n            error: action.errorMessage,\r\n            status: 'completed'\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nfunction useHttp( requestFunction, startWithPending = false ) {\r\n    const [ httpState, dispatch ] = useReducer( httpReducer, {\r\n        status: startWithPending ? 'pending' : null,\r\n        data: null,\r\n        error: null,\r\n    } );\r\n\r\n    const sendRequest = useCallback(\r\n        async function ( requestData ) {\r\n            dispatch( { type: 'SEND' } );\r\n            \r\n            try {\r\n                const responseData = await requestFunction( requestData );\r\n                dispatch( { type: 'SUCCESS', responseData } );\r\n            } catch ( error ) {\r\n\r\n                dispatch( {\r\n                    type: 'ERROR',\r\n                    errorMessage: error.message || 'Something Went Wrong!',\r\n                } );\r\n            }\r\n        },\r\n        [ requestFunction ]\r\n    );\r\n\r\n    return {\r\n        sendRequest,\r\n        ...httpState\r\n    }\r\n}\r\n\r\nexport default useHttp;","const FIREBASE_DOMAIN = \"https://quote-ea24d-default-rtdb.firebaseio.com\";\r\n\r\n\r\n// get Requests \r\n\r\n// for geting the all quotes \r\n\r\nexport async function getAllQuote() {\r\n    const response = await fetch( `${ FIREBASE_DOMAIN }/quotes.json` );\r\n    const data = await response.json();\r\n\r\n    if ( !response.ok ) {\r\n        throw new Error(data.message || 'Could not fetch quotes.');\r\n    }\r\n\r\n    const transformedQuotes = [];\r\n\r\n    for ( const key in data ) {\r\n        const quoteObj = {\r\n            id: key,\r\n            ...data[key]\r\n        }\r\n     transformedQuotes.push( quoteObj );\r\n    }\r\n    return transformedQuotes;\r\n};\r\n\r\n// for  getting the single quote \r\n\r\nexport async function getSingleQuote(quoteId) {\r\n    const response = await fetch( `${ FIREBASE_DOMAIN }/quotes/${ quoteId }.json` );\r\n\r\n    const data = await response.json();\r\n\r\n    if ( !response.ok ) {\r\n        throw new Error( data.message || 'could not fetch quotes' );\r\n    }\r\n\r\n    const loadedQuote = {\r\n        id: quoteId,\r\n        ...data\r\n    }\r\n\r\n    return loadedQuote;\r\n}\r\n\r\n\r\n// for getiing the comments \r\n\r\nexport async function getAllComments( quoteId ) {\r\n    const response = await fetch( `${ FIREBASE_DOMAIN }/comments/${ quoteId }.json` );\r\n\r\n    const data = await response.json();\r\n\r\n    if ( !response.ok ) {\r\n        throw new Error( data.message || 'could not fetch Comments' );\r\n    }\r\n\r\n    const transformedComments = [];\r\n\r\n    for ( const key in data ) {\r\n        const commentObj = {\r\n            id: key,\r\n            ...data[key]\r\n        }\r\n        transformedComments.push( commentObj );\r\n    }\r\n\r\n    return transformedComments;\r\n}\r\n\r\n// Post Request \r\n\r\n\r\n// for sending the quotes \r\n\r\nexport async function addQuote( quoteData ) {\r\n    const response = await fetch( `${ FIREBASE_DOMAIN }/quotes.json`, {\r\n        method: 'POST',\r\n        body: JSON.stringify( quoteData ),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    } );\r\n\r\n    const data = await response.json();\r\n\r\n    if ( !response.ok ) {\r\n        throw new Error( data.message || 'Could not Create Quotes' );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n// for adding the comment data \r\n\r\n\r\nexport async function addComment(requestData) {\r\n    const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestData.commentData),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Could not add comment.');\r\n    }\r\n  \r\n    return { commentId: data.name };\r\n  }","import { Link } from \"react-router-dom\";\r\nimport classes from \"./NoQuotesFound.module.css\";\r\n\r\nconst NoQuoteFound = () => {\r\n    return (\r\n        <div className={classes.noquotes}>\r\n            <p>No Quotes Found</p>\r\n            <Link className=\"btn\" to=\"/new-quote\">\r\n                Add A Quote\r\n            </Link>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoQuoteFound;","import classes from \"./LoadingSpinner.module.css\";\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className={classes.spinner}></div>\r\n    )\r\n};\r\n\r\nexport default LoadingSpinner;","import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuote } from '../lib/api';\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\r\n    getAllQuote, true\r\n  );\r\n\r\n  useEffect( () => {\r\n    sendRequest();\r\n  }, [ sendRequest ] );\r\n\r\nif( status === 'pending' ) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    )\r\n  };\r\n\r\n  if ( error ) {\r\n    return <p className=\"centerd focused\">{ error}</p>\r\n  }\r\n\r\n  if ( status === 'completed' && ( !loadedQuotes || loadedQuotes.length === 0 ) ) {\r\n    return <NoQuotesFound />\r\n  }\r\n  return <QuoteList quotes={loadedQuotes} />\r\n};\r\n\r\nexport default AllQuotes;","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={classes.Card}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Card;","// import { Fragment, useRef, useState } from \"react\";\r\n// import Card from \"../UI/Card\";\r\n// import classes from \"./QuoteForm.module.css\";\r\n// import LoadingSpinner from \"../UI/LoadingSpinner\";\r\n// import { Prompt } from \"react-router-dom\";\r\n\r\n// const QuoteForm = ( props ) => {\r\n    \r\n//     const [isEntering, setIsEntering] = useState(false)\r\n\r\n//     const authorInputRef = useRef();\r\n//     const textInputRef = useRef();\r\n\r\n//     const submitFormHandler = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         const enteredAuthor = authorInputRef.current.value;\r\n//         const enteredText = textInputRef.current.value;\r\n\r\n//         props.onAddQuote( { author: enteredAuthor, text: enteredText } );\r\n//     }\r\n\r\n//     const finishEnteringHandler = () => {\r\n//         setIsEntering( false );\r\n//     }\r\n\r\n//     const formFocusHandler = () => {\r\n//         setIsEntering( true );\r\n//     }\r\n\r\n//     return (\r\n//         <Fragment>\r\n//             <Prompt when={isEntering} message={() => 'Are you Sure You Want to leave? All Your Entered Data will be lost..'} />\r\n//         <Card>\r\n//             <form className={classes.from} onSubmit={submitFormHandler} onFocus={formFocusHandler}>\r\n//                 {props.isLoading && (\r\n//                     <div className={classes.loading}>\r\n//                         <LoadingSpinner />\r\n//                     </div>\r\n//                 )}\r\n                \r\n//                 <div className={classes.control}>\r\n//                     <label htmlFor=\"author\"> Author</label>\r\n//                     <input type=\"text\" id=\"author\" ref={authorInputRef }/>\r\n//                 </div>\r\n//                 <div className={classes.control}>\r\n//                     <label htmlFor='text'>Text</label>\r\n//                     <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n//                 </div>\r\n//                 <div className={classes.actions}>\r\n//                     <button onClick={finishEnteringHandler} className=\"btn\"> Add a Quote</button>\r\n//                 </div>\r\n//             </form>\r\n//             </Card>\r\n//         </Fragment>\r\n//     )\r\n// };\r\n\r\n// export default QuoteForm;\r\n\r\n\r\nimport { Fragment, useRef, useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\n\r\nconst QuoteForm = (props) => {\r\n  const [isEntering, setIsEntering] = useState(false);\r\n\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const finishEnteringHandler = () => {\r\n    setIsEntering(false);\r\n  };\r\n\r\n  const formFocusedHandler = () => {\r\n    setIsEntering(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Prompt\r\n        when={isEntering}\r\n        message={(location) =>\r\n          'Are you sure you want to leave? All your entered data will be lost!'\r\n        }\r\n      />\r\n      <Card>\r\n        <form\r\n          onFocus={formFocusedHandler}\r\n          className={classes.form}\r\n          onSubmit={submitFormHandler}\r\n        >\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor='author'>Author</label>\r\n            <input type='text' id='author' ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor='text'>Text</label>\r\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n\r\n    const { sendRequest, status } = useHttp( addQuote );\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        if ( status === 'completed' ) {\r\n            history.push( '/quotes' );\r\n        }\r\n    }, [ status, history ] );\r\n    \r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest( quoteData );\r\n    }\r\n\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n};\r\n\r\nexport default NewQuote;","const NotFound = () => {\r\n    return (\r\n        <div className=\"centered\">\r\n            <p>Page Not Found..</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotFound;","import classes from \"./HighlightedQuotes.module.css\";\r\n\r\nconst HighlightedQuotes = (props) => {\r\n    return (\r\n        <figure className={classes.quote}>\r\n            <p>{props.text}</p>\r\n            <figcaption>{props.author}</figcaption>\r\n        </figure>\r\n    )\r\n};\r\n\r\nexport default HighlightedQuotes;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// import { useEffect, useRef } from 'react';\n// import useHttp from '../../hooks/use-http';\n// import { addComment } from '../../lib/api';\n// import LoadingSpinner from '../UI/LoadingSpinner';\n\n// import classes from './NewCommentForm.module.css';\n\n// const NewCommentForm = (props) => {\n//   const commentTextRef = useRef();\n\n\n//   const { sendRequest, status, error } = useHttp( addComment );\n\n//   console.log(\"sendRequest\",sendRequest)\n\n//     const { onAddedComment } = props;\n\n//     useEffect( () => {\n//       if ( status === 'completed' && !error ) {\n//         onAddedComment();\n//       }\n//     },[status, error, onAddedComment])\n\n//   const submitFormHandler = (event) => {\n//     event.preventDefault();\n\n//     const enterdText = commentTextRef.current.value;\n//     // optional: Could validate here\n//     sendRequest( { commentData: { text: enterdText }, quoteId: props.quoteId } );\n//     // send comment to server\n//   };\n\n//   return (\n//     <form className={classes.form} onSubmit={submitFormHandler}>\n//       {status === 'pending' && (\n//         <div className=\"centered\">\n//           <LoadingSpinner />\n//         </div>\n//       )}\n//       <div className={classes.control} onSubmit={submitFormHandler}>\n//         <label htmlFor='comment'>Your Comment</label>\n//         <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n//       </div>\n//       <div className={classes.actions}>\n//         <button className='btn'>Add Comment</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default NewCommentForm;\n\n\nimport { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from \"./CommentsList\";\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [ isAddingComment, setIsAddingComment ] = useState( false );\n  \n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp( getAllComments );\n  \n  useEffect( () => {\n    sendRequest( quoteId );\n  }, [ quoteId, sendRequest ] );\n\n\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback( () => {\n    sendRequest( quoteId );\n  }, [ sendRequest, quoteId ] );\n\n  let comments;\n\n  if ( status === 'pending' ) {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if ( status === 'completed' && loadedComments && loadedComments.length > 0 ) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler}/>}\n      <p>{comments }</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuotes';\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n    getSingleQuote,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered'>{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuote from \"./pages/AllQuote\";\nimport NewQuote from \"./pages/NewQuote\";\nimport NotFound from \"./pages/NotFound\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\n\n\nfunction App() {\n  return (\n    <Layout>\n    <Switch>\n      <Route path=\"/\" exact>\n        <Redirect to=\"/quotes\" />\n      </Route>\n      <Route path=\"/quotes\" exact>\n        <AllQuote />\n      </Route>\n      <Route path=\"/quotes/:quoteId\">\n        <QuoteDetail />\n      </Route>\n      <Route path=\"/new-quote\">\n        <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n      </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById( 'root' ) );\n"],"sourceRoot":""}